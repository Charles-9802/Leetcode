max(dic, key=lambda x: dic[x])
max(dic, key=dic.get)

# 扩展为一维数组
# out = []
# def swy(seq):
#     for item in seq:
#         if isinstance(item, list):
#             swy(item)
#         else:
#             out.append(item)
#     return out
#
#
# print(swy([1, [2, 3], [[4, 5], [6]]]))

# 去掉字符串前空格 字符串转数字
# i = 0
# length = len(str)
# while str[i] == " ":
#     i += 1
#     if i == length:
#         return 0


ssh 连接远程服务器
pwd 所在目录位置
ifconfig 网络设备信息
free 服务器内存
df -lh 磁盘空间
mdkir 新建目录
cd 切换目录
git github拉取项目代码
ls 查看当前目录下的文件
du 查看当前占用空间
cat 查看文本文件
uname 查看系统版本
yum(Ubuntu apt)安装软件
-version 查看版本
which 查看文件目录
wget 下载网络地址的文件压缩包
tar -zxvf 解压
help 帮助手册
find -name 查找包
cp 复制文件
mv 重命名
nohup &后台启动
jobs 任务查询
ps -ef是否有进程
ps -ef|grep 筛选相应进程
netstst -ntlp 查看占用端口
cul 访问相应端口
tail -n查看行数
sz  下载文件到本地
vim 文本编辑器
kill杀死进程
top 查看是否启动
shell 脚本
chmod 改文件权限
history 查看历史命令
rm -rf /* 跑路


1.heapq.heappush(heap,item)
2.heapq.heapify(list)
3.heapq.heappop(heap)
4.heapq.heapreplace(heap.item) # 注：删除最小元素值，添加新的元素值



SQL5 将查询后的列重新命名： select device_id as user_infos_example from user_profile limit 2
SQL8 查找某个年龄段的用户信息：select device_id, gender, age from user_profile where age >=20 and age <= 23 或者 age between 20 and 23
SQL9 查找除复旦大学的用户信息：select device_id, gender, age, university from user_profile where university != "复旦大学"
SQL10 用where过滤空值练习：select device_id, gender, age, university from user_profile where age is not null
SQL11 高级操作符练习(1): select device_id, gender, age, university, gpa from user_profile where gpa > 3.5 and gender = "male"
SQL13 Where in 和Not in: select device_id, gender, age, university, gpa from user_profile where university in ("北京大学", "复旦大学", "山东大学")
SQL15 查看学校名称中含北京的用户: select device_id, age, university from user_profile where university like "北京%"
例25.查询学生表中姓‘张’、姓‘李’和姓‘刘’的学生的情况: SELECT * FROM 学生表 WHERE 姓名 LIKE '[张李刘]%’
查询学生表表中名字的第2个字为“小”或“大”的学生的姓名和学号: SELECT 姓名,学号 FROM 学生表 WHERE 姓名 LIKE '_[小大]%'
查询学生表中所有不姓“刘”的学生: SELECT 姓名 FROM 学生 WHERE 姓名 NOT LIKE '刘%’
SQL16 查找GPA最高值:
select max(gpa) from user_profile where university = "复旦大学"
select gpa from user_profile where university = "复旦大学" order by gpa desc limit 1    # desc 降序
SQL17 计算男生人数以及平均GPA: select count(*) as male_num, avg(gpa) from user_profile where gender = "male"
SQL18 分组计算练习题: select gender, university, count(device_id) as user_num, avg(active_days_within_30) as avg_active_days, avg(question_cnt)
as avg_question_cnt from user_profile group by gender, university                                   # 分组查询
SQL19 分组过滤练习题：select university, avg(question_cnt) as avg_question_cnt, avg(answer_cnt) as avg_answer_cnt from
user_profile group by university having avg(question_cnt) < 5 or avg(answer_cnt) < 20           # 聚合函数结果作为筛选条件时，不能用where，而是用having语法, having放在group by后面

SQL21 浙江大学用户题目回答情况
select qpd.device_id, qpd.question_id, qpd.result
from question_practice_detail as qpd
inner join user_profile as up
on up.device_id = qpd.device_id and up.university = '浙江大学'
order by question_id

select device_id, question_id, result from question_practice_detail where device_id in
(select device_id from user_profile where university = "浙江大学") order by question_id

SQL22 统计每个学校的答过题的用户的平均答题数：
select up.university, count(qpd.question_id) / count(distinct qpd.device_id) as avg_answer_cnt
from question_practice_detail as qpd inner join user_profile as up on qpd.device_id = up.device_id group by university